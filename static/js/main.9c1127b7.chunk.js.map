{"version":3,"sources":["components/Profile/Profile.module.css","components/Transactions/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/randomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","randomColor","r","Math","floor","random","g","b","toString","Statistics","props","title","statistics","statList","map","stat","item","style","backgroundColor","percentage","id","FriendLisItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","FriendListItem","TransactionHistory","items","transactionHistory","tableHead","row","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1127b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"general-font\":\"Profile_general-font__3aDpL\",\"profile\":\"Profile_profile__ofFfm\",\"description\":\"Profile_description__1gdCy\",\"avatar\":\"Profile_avatar__14fB7\",\"name\":\"Profile_name__1opZO Profile_general-font__3aDpL\",\"tag\":\"Profile_tag__B6_Zc Profile_general-font__3aDpL\",\"location\":\"Profile_location__2NPKs Profile_general-font__3aDpL\",\"stats\":\"Profile_stats__m-Xb5\",\"label\":\"Profile_label__1lIaC Profile_general-font__3aDpL\",\"quantity\":\"Profile_quantity__1Zu8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3TFUt\",\"item\":\"TransactionHistory_item__E_fvd\",\"tableHead\":\"TransactionHistory_tableHead__1TL7o\",\"row\":\"TransactionHistory_row__3yHLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2a_Ak\",\"item\":\"FriendList_item__18PNf\",\"avatar\":\"FriendList_avatar__19iCc\",\"name\":\"FriendList_name__U2moB\",\"status\":\"FriendList_status__39cMK\",\"online\":\"FriendList_online__1sXkd FriendList_status__39cMK\",\"offline\":\"FriendList_offline__1mrDO FriendList_status__39cMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__PypXP\",\"title\":\"Statistics_title__XCHqf\",\"statList\":\"Statistics_statList__QO1rr\",\"item\":\"Statistics_item__2RNOV\",\"label\":\"Statistics_label__371vr\",\"percentage\":\"Statistics_percentage__2dUEn\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\n// const profileOptions = { avatar, name, tag, location, stats };\n\nfunction Profile({ avatar, name, tag, location, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p> {/*role=\"genral-font\"*/}\n        <p className={s.tag}>@{tag}</p> {/*role=\"genral-font\"*/}\n        <p className={s.location}>{location}</p> {/*role=\"genral-font\"*/}\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  stats: PropTypes.object,\n};\n\nexport default Profile;\n\n// name — имя пользователя\n// tag — тег в социальной сети без @\n// location — город и страна\n// avatar — url на изображение\n// stats — объект с информацией об активности\n\n// {\n//     \"name\": \"Jacques Gluke\",\n//         \"tag\": \"jgluke\",\n//             \"location\": \"Ocho Rios, Jamaica\",\n//                 \"avatar\": \"https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg\",\n//                     \"stats\": {\n//         \"followers\": 5603,\n//             \"views\": 4827,\n//                 \"likes\": 1308\n//     }\n// }\n","function randomColor() {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n\n  return color;\n}\n\nexport default randomColor;\n","import PropTypes from 'prop-types';\nimport randomColor from './randomColor';\nimport s from './Statistics.module.css';\n\nfunction Statistics(props) {\n  const { stats, title } = props;\n\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>Upload stats</h2>}{' '}\n      {/* не обязательный props и тег*/}\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={s.item}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nfunction FriendLisItem({ avatar, name, isOnline }) {\n  return (\n    <>\n      <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </>\n  );\n}\n\nFriendLisItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendLisItem;\n\n// {\n//     \"avatar\": \"https://www.flaticon.com/svg/static/icons/svg/763/763704.svg\",\n//     \"name\": \"Mango\",\n//     \"isOnline\": true,\n//     \"id\": 1812\n// }\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  // {/*  Произвольное кол-во FriendListItem, в зависимости от кол-ва объектов в массиве */ }\n\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <li className={s.item} key={friend.id}>\n          <FriendListItem\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr className={s.tableHead}>\n          <th className={s.item}>Type</th>\n          <th className={s.item}>Amount</th>\n          <th className={s.item}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id} className={s.row}>\n            <td className={s.item}>{item.type}</td>\n            <td className={s.item}>{item.amount}</td>\n            <td className={s.item}>{item.currency}</td>\n          </tr>\n        ))}\n        ;\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\n\nimport transactions from './components/Transactions/transactions.json';\nimport TransactionHistory from './components/Transactions/TransactionHistory';\n\nfunction App() {\n  return (\n    <div>\n      {/* =================  Task #1  =========================== */}\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      {/* =================  Task #2  =========================== */}\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n\n      {/* =================  Task #3  =========================== */}\n      <FriendList friends={friends} />\n\n      {/* =================  Task #4  =========================== */}\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}